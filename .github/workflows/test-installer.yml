name: Test Installer

on:
  workflow_dispatch:
  workflow_run:
    workflows: [Build]
    types: 
      - completed

jobs:
  test-installer:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-20.04]
        include:
          - os: 'windows-latest'
            installer: 'installer-win'
            exe: 'bin/${{ github.event.repository.name }}.exe'
          - os: 'macos-latest'
            installer: 'installer-macos'
            exe: '${{ github.event.repository.name }}.app/Contents/MacOS/${{ github.event.repository.name }}'
          - os: 'ubuntu-20.04'
            installer: 'installer-ubuntu'
            exe: 'bin/${{ github.event.repository.name }}'
    runs-on: ${{ matrix.os }}
    steps:
    - name: Download artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        name: ${{ matrix.installer }}
        workflow: build.yml

    - name: Extract and run 
      shell: bash
      run: |
        # Find the name of the installer 
        ZIP=$(ls ${{ github.event.repository.name }}-*.zip)
        # Extract
        unzip "$ZIP"
        
        echo ::set-output name=app_folder::"${ZIP%*.zip}"


    - name: Run application (Linux|MacOS)
      if: runner.os == 'Linux' || runner.os == 'macOS'
      shell: bash
      run: |
        ZIP=$(ls ${{ github.event.repository.name }}-*.zip)
        # Extract and move to folder
        cd "${ZIP%*.zip}"
        ./${{ matrix.exe }} 

    - name: Run application (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        $ZIP = (Get-ChildItem -Name ${{ github.event.repository.name }}-*.zip)
        $folder = (Get-Item $ZIP).DirectoryName
        echo $folder
        cd "$folder"
        Get-ChildItem -Path *
        Invoke-expression "${{ matrix.exe }}"